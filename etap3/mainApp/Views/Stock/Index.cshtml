@model List<Platformy_Programowania_1.Models.Company>

@using (Html.BeginForm("GetData", "Stock", FormMethod.Post))
{
    @Html.DropDownList("SelectedCompanyId", new SelectList(Model, "ID_firmy", "Nazwa_firmy"), "Wybierz firmę", new { @class = "form-control" })
    <button type="submit">Pobierz dane</button>
}
@TempData["YearlyData"]
<canvas id="myChart" width="400" height="400"></canvas>
@{
    string razorData = (string)(TempData["YearlyData"]);
}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
@if (TempData["YearlyData"] != null)
{
    <script>
        // Ciąg tekstowy JSON z danymi
        //var jsonData = '[{"label":"Red","value":12},{"label":"Blue","value":19},{"label":"Yellow","value":3},{"label":"Green","value":5},{"label":"Purple","value":2},{"label":"Orange","value":3}]';
        var jsonData = "[{\"ID_rekordu\":1,\"ID_firmy\":1,\"Cena\":222.2,\"Dzien\":\"2023-01-01T00:00:00\"},{\"ID_rekordu\":2,\"ID_firmy\":1,\"Cena\":223.7,\"Dzien\":\"2023-01-02T00:00:00\"}]"

        var jsonData = '@Html.Raw(razorData)';
        // Parsowanie danych z ciągu tekstowego JSON
        var data = JSON.parse(jsonData);

        // Przygotowanie danych do wykresu
        var labels = data.map(function(item) {
        return item.Dzien;
        });

        var values = data.map(function(item) {
        return item.Cena;
        });

        var chartData = {
        labels: labels,
        datasets:
        [{
        label: 'Dataset',
        data: values,
        backgroundColor: 'rgba(0, 123, 255, 0.5)',
        borderColor: 'rgba(0, 123, 255, 1)',
        borderWidth: 1
        }]
        };

        // Utworzenie i konfiguracja wykresu
        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
        type: 'line',
        data: chartData,
        options:
        {
        responsive: true,
        scales:
        {
        y:
        {
        beginAtZero: true
        }
        }
        }
        });


    </script>
}
