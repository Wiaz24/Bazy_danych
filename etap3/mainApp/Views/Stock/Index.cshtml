@model List<Platformy_Programowania_1.Models.Company>
<script type="text/javascript" src="https://canvasjs.com/assets/script/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="https://cdn.canvasjs.com/canvasjs.stock.min.js"></script>
@{
    string yearlyData = (string)(TempData["YearlyData"]);
    string dailyData = (string)(TempData["DailyData"]);
}
<script type="text/javascript">
    window.onload = function () {
    var jsonYearlyData = '@Html.Raw(yearlyData)';
    var jsonDailyData = '@Html.Raw(dailyData)';

    // Parsowanie danych z ciągu tekstowego JSON
    var yearlyData = JSON.parse(jsonYearlyData);
    var dailyData = JSON.parse(jsonDailyData);

    var yearlyDataPoints = [];
    var dailyDataPoints = [];

    for (var i = 0; i < yearlyData.length; i++) {
        yearlyDataPoints.push({ x: new Date(yearlyData[i].Dzien), y: Number(yearlyData[i].Cena) });
    }

    for (var i = 0; i < dailyData.length; i++) {
        dailyDataPoints.push({ x: new Date(dailyData[i].Dzien), y: Number(dailyData[i].Cena) });
    }

    var yearlyChart = new CanvasJS.StockChart("yearlyChart", {
        backgroundColor: "#27262e",
        height: 600,
        title: {
            text: '@Html.Raw((string)(TempData["Title"]))',
            fontSize: 30,
            fontColor: "white",
            padding: 5,
            borderThickness: 4,
            cornerRadius: 8,
            borderColor: "#3763f4",
            backgroundColor: "#27262e",
        },
        charts: [{
            data: [{
                xValueType: "dateTime",
                type: "line",
                dataPoints: yearlyDataPoints
            }]
        }],
        rangeSelector: {
            buttons: [],
            inputFields: {
                enabled: false
            }
        }
    });

    var dailyChart = new CanvasJS.StockChart("dailyChart", {
        backgroundColor: "#27262e",
        height: 600,
        title: {
            text: '@Html.Raw((string)(TempData["Title"]))',
            fontSize: 30,
            fontColor: "white",
            padding: 5,
            borderThickness: 4,
            cornerRadius: 8,
            borderColor: "#3763f4",
            backgroundColor: "#27262e",
        },
        charts: [{
            data: [{
                xValueType: "dateTime",
                type: "line",
                dataPoints: dailyDataPoints
            }]
        }],
        rangeSelector: {
            buttons: [],
            inputFields: {
                enabled: false
            }
        }
    });

    yearlyChart.render();
    dailyChart.render();
}
</script>

<div class="container-fluid text-secondary" style="width:50%;">
    @using (Html.BeginForm("GetData", "Stock", FormMethod.Post))
    {
        @Html.DropDownList("ID_firmy", new SelectList(Model, "ID_firmy", "Nazwa_firmy"), "Wybierz firmę", new { @class = "form-control" })
        <div class="col text-center">
            <button class="btn btn-primary shadow" role="button" type="submit">Pobierz dane</button>
        </div>
    }
</div>

@if (TempData["Title"] != null)
{
    <div class="container-fluid text-secondary" style="width:90%;">
        <ul class="nav nav-tabs" role="tablist">
            <li class="nav-item" role="presentation"><a class="nav-link active" role="tab" data-bs-toggle="tab" href="#tab-1">Tab 1</a></li>
            <li class="nav-item" role="presentation"><a class="nav-link" role="tab" data-bs-toggle="tab" href="#tab-2">Tab 2</a></li>
        </ul>
        <div class="tab-content">
            <div id="tab-1" class="tab-pane active" role="tabpanel">
                <div class="container-fluid text-secondary">
                    <div id="yearlyChart">
                    </div>
                </div>
            </div>
            <div id="tab-2" class="tab-pane" role="tabpanel">
                
            </div>
        </div>
    </div>
}

